AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  securityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  subnets:
    Type: AWS::EC2::Subnet::Id

Resources:
  rdsFunction:
    Type: AWS::Serverless::Function
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: ['sts:AssumeRole']
      CodeUri: postgres/
      Handler: pg_healthcheck_lambda.lambda_handler
      Runtime: python3.8
      Timeout: 180
      Events:
        rdsFunction:
          Type: HttpApi
          Properties:
            Path: /
            Method: get
      Policies:
      - Statement:
        - Sid: logsPol
          Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource: '*'
        - Sid: s3Pol
          Effect: Allow
          Action:
          - s3:CreateBucket
          - s3:PutEncryptionConfiguration
          - s3:PutObject
          Resource:
            - arn:aws:s3:::rds-reports-*
            - arn:aws:s3:::rds-reports-*/*
        - Sid: rdsPol
          Effect: Allow
          Action:
          - rds:DescribeDBInstances
          - rds:DescribeDBClusters
          - rds:DescribeDBLogFiles
          Resource: '*'
        - Sid: stsPol
          Effect: Allow
          Action:
          - sts:getCallerIdentity
          Resource: '*'
        - Sid: smPol
          Effect: Allow
          Action:
          - secretsmanager:GetSecretValue
          Resource: '*'
      VpcConfig:
        SecurityGroupIds:
          - !Ref securityGroup
        SubnetIds:
          - !Ref subnets
